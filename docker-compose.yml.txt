version: '3'

services:
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: api
    restart: always
    ports:
      - 5000:5000
    networks:
      - myNetwork

  redis:
    restart: always
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - myNetwork

  celery:
    restart: always
    container_name: celery
    build:
      context: .
      dockerfile: ./celeryapp/Dockerfile
    networks:
      - myNetwork
    entrypoint: ./start-celery.sh
    depends_on:
      - redis
    # environment:

    # healthcheck:
    #   test: [ "CMD", "redis-cli", "ping" ]
    #   retries: 3
    #   timeout: 5s

  nginx:
    build: ./nginx
    restart: always
    container_name: nginx
    ports:
      - 80:80
    networks:
      - myNetwork

  flower:
    build:
      context: .
      dockerfile: ./flower/Dockerfile
    restart: always
    container_name: flower
    command: celery -A celeryapp.celery_worker --broker=redis://redis:6379 flower -l INFO --port=5555  --address='0.0.0.0'
    ports:
      - 5555:5555
    depends_on:
      - redis
    networks:
      - myNetwork

  # mysql:
  #   image: mysql:latest
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: auth_db
  #     MYSQL_USER: username
  #     MYSQL_PASSWORD: passwd
  #     MYSQL_ROOT_PASSWORD: rootpaswd
  #   ports:
  #     - "3306:3306"
    # volumes:
    #     - mysql/data:/var/lib/mysql   # clean this folder !


networks:
  myNetwork:
    driver: bridge